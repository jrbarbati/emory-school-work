Variable Name Rules
	Must begin with a letter
	no spaces
	no keywords
	can't be longer than namelengthmax (63)
Casting
	myVar = 6
	myVar = int8(myVar)
	
	cast(myVar, 'int8')
	
	myVar = 6
	myVar2 = 7
	cast(myVar 'like' myVar2)
Character Encoding
	int8('a') --> 97
	int8('b') --> 98
	int8('A') --> 65

	char('shout' - 32) --> subtracts 32 from each ASCII value of each character
				of 'shout' and casts those numbers back to a chars
				returns SHOUT

CHAPTER 2
Matrices and Vectors

Dimenions (r x c)
Scalar --> [8] is a 1x1 matrix
Row Vector --> list of numbers in one row [1 2 3 4] (1x4)
Column Vector --> list of numbers in one column [1; 2; 3; 4] (4x1)

Indexing of Matrices and Vectors
	Can be indexed by row and column numbers
	
Multi-Dimensional Arrays
	Pictures are considered 3D matrices, with the 3rd dimension being the
		RGB values, NxNx3 matrix
	
Scalar Mulitplication
	Mat = [4 5 6; 3 2 1]
	Mat * 2
	ans = [8 10 12; 6 4 2]

Scalar Addition
	a = [1 4 8]
	b = [6 2 9]
	a + b
	ans = [7 6 17]

Matrix Multiplication
	Element-Wise Multiplication
		a .* b
		ans = [6 8 72]
	Element-Wise Exponentiation
		a .^ b
	Element-Wise Division
		a ./ b
	Normal Matrix Multiplication
		a * b
		dot product each row of a with each column of b
		MxN * NxP = MxP
		a = [1 3 4; 5 6 7]
		b = [1 2; 1 2; 1 2]
		a * b = [8 16; 18 36]
Vector Multiplication
	Row Vector * Column Vector = Scalar (1x1)
	   1xN		Nx1
	Column Vector * Row Vector = Square Matrix (NxN)
	   Nx1		   1xN
	Cross Product
		a * b =	[0 -a3 a2] [b1]
			[a3 0 -a1] [b2]
			[-a2 a1 0] [b3]
		cross(vec 1, vec 2) returns cross product of the vectors

Logical Vectors
	All 0s and 1s (False and True, repspectively)
	vec1 = [4 3 1 7]
	vec2 = [5 3 2 7]
	logVec = vec1 == vec2
	logVec = [0 1 0 1]
